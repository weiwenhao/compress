type archive_t = cptr
type archive_entry_t = cptr

fn archive_write_new():archive_t

fn archive_write_add_filter_gzip(archive_t a)

fn archive_write_set_format_ustar(archive_t a)

fn archive_write_open_filename(archive_t a, cptr filename)

fn archive_read_disk_new():archive_t

fn archive_read_disk_open(archive_t a, cptr filename):i32

fn archive_entry_new():archive_entry_t

fn archive_read_next_header2(archive_t a, archive_entry_t e):i32

fn archive_error_string(archive_t a):cptr

fn archive_read_disk_descend(archive_t a):i32

fn archive_write_header(archive_t a, archive_entry_t entry):i32

fn archive_entry_pathname(archive_entry_t entry):cptr

fn archive_entry_set_pathname(archive_entry_t entry, cptr pathname)

fn archive_entry_sourcepath(archive_entry_t entry):cptr

fn archive_entry_free(archive_entry_t entry)

fn archive_write_data(archive_t a, cptr buf, int len):int

fn archive_read_close(archive_t a):i32

fn archive_read_free(archive_t a):i32

fn archive_write_close(archive_t a):i32

fn archive_write_free(archive_t a):i32

fn archive_read_new():archive_t

fn archive_write_disk_new():archive_t

fn archive_write_disk_set_options(archive_t ext, i32 flags):i32

fn archive_read_support_filter_gzip(archive_t a):i32

fn archive_read_support_format_tar(archive_t a):i32

fn archive_read_open_filename(archive_t a, cptr filename, uint block_size):i32

fn archive_read_next_header(archive_t a, ptr<archive_entry_t> entry_ptr):i32

fn archive_read_data_block(archive_t ar, ptr<cptr> buf, ptr<uint> size, ptr<i64> offset):i32

fn archive_write_data_block(archive_t aw, cptr buf, uint size, i64 offset):i32




